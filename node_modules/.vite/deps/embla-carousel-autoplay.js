import {
  EmblaCarousel
} from "./chunk-L2GABWMY.js";
import "./chunk-ZS7NZCD4.js";

// node_modules/embla-carousel-autoplay/embla-carousel-autoplay.esm.js
var defaultOptions = {
  active: true,
  breakpoints: {},
  delay: 4e3,
  jump: false,
  playOnInit: true,
  stopOnInteraction: true,
  stopOnMouseEnter: false,
  stopOnLastSnap: false,
  rootNode: null
};
function Autoplay(userOptions) {
  var optionsHandler = EmblaCarousel.optionsHandler();
  var optionsBase = optionsHandler.merge(defaultOptions, Autoplay.globalOptions);
  var options;
  var carousel;
  var interaction;
  var timer = 0;
  var jump = false;
  function init(embla) {
    carousel = embla;
    options = optionsHandler.atMedia(self.options);
    jump = options.jump;
    interaction = options.stopOnInteraction ? destroy : stop;
    var eventStore = carousel.internalEngine().eventStore;
    var emblaRoot = carousel.rootNode();
    var root = options.rootNode && options.rootNode(emblaRoot) || emblaRoot;
    carousel.on("pointerDown", interaction);
    if (!options.stopOnInteraction)
      carousel.on("pointerUp", reset);
    if (options.stopOnMouseEnter) {
      eventStore.add(root, "mouseenter", interaction);
      if (!options.stopOnInteraction)
        eventStore.add(root, "mouseleave", reset);
    }
    eventStore.add(document, "visibilitychange", function() {
      if (document.visibilityState === "hidden")
        return stop();
      reset();
    });
    eventStore.add(window, "pagehide", function(event) {
      if (event.persisted)
        stop();
    });
    if (options.playOnInit)
      play();
  }
  function destroy() {
    carousel.off("pointerDown", interaction);
    if (!options.stopOnInteraction)
      carousel.off("pointerUp", reset);
    stop();
    timer = 0;
  }
  function play(jumpOverride) {
    stop();
    if (typeof jumpOverride !== "undefined")
      jump = jumpOverride;
    timer = window.setTimeout(next, options.delay);
  }
  function stop() {
    if (!timer)
      return;
    window.clearTimeout(timer);
  }
  function reset() {
    if (!timer)
      return;
    stop();
    play();
  }
  function next() {
    var index = carousel.internalEngine().index;
    var kill = options.stopOnLastSnap && index.get() === index.max;
    if (kill)
      return destroy();
    if (carousel.canScrollNext()) {
      carousel.scrollNext(jump);
    } else {
      carousel.scrollTo(0, jump);
    }
    play();
  }
  var self = {
    name: "autoplay",
    options: optionsHandler.merge(optionsBase, userOptions),
    init,
    destroy,
    play,
    stop,
    reset
  };
  return self;
}
Autoplay.globalOptions = void 0;
export {
  Autoplay as default
};
//# sourceMappingURL=embla-carousel-autoplay.js.map
